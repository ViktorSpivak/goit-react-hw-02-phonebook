{"version":3,"sources":["components/ContactForm.jsx","components/Filter.jsx","components/ContactList.jsx","components/App.jsx","index.js","components/contactform.module.css"],"names":["ContactForm","state","name","number","nameFormId","uuidv4","numberFormId","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onFindOverlap","alert","newContact","id","onCheckIn","this","onSubmit","className","style","phonebookForm","htmlFor","labelStyle","type","onChange","Component","protoTypes","PropTypes","func","isRequired","Filter","filter","findFormId","handleChangeFilter","onFindContact","ContactList","onShowFindRes","onDelete","map","key","onClick","Phonebook","contacts","handleFindOverlap","newName","some","contact","toLowerCase","split","handleFindContacts","startsWith","handleDeleteContact","ev","persist","handleCheckIn","ReactDOM","render","App","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.781de838.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./contactform.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n  nameFormId = uuidv4();\r\n  numberFormId = uuidv4();\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    if (this.props.onFindOverlap(name)) {\r\n      alert(`${name} is already in contacts`);\r\n      this.setState({\r\n        name: \"\"\r\n      });\r\n      return;\r\n    }\r\n    const newContact = { id: uuidv4(), name, number };\r\n    this.props.onCheckIn(newContact);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={style.phonebookForm}>\r\n        <label htmlFor={this.nameFormId} className={style.labelStyle}>\r\n          Name\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            id={this.nameFormId}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberFormId} className={style.labelStyle}>\r\n          Number\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            id={this.numberFormId}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.protoTypes = {\r\n  onFindOverlap: PropTypes.func.isRequired,\r\n  onCheckIn: PropTypes.func.isRequired\r\n};\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./contactform.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport default class Filter extends Component {\r\n  state = {\r\n    filter: \"\"\r\n  };\r\n  findFormId = uuidv4();\r\n  handleChangeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n    this.props.onFindContact(e.target.value);\r\n  };\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <label htmlFor={this.findFormId} className={style.labelStyle}>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={this.handleChangeFilter}\r\n          id={this.findFormId}\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\nFilter.protoTypes = {\r\n  onFindContact: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst ContactList = ({ onShowFindRes, onDelete }) => (\r\n  <div>\r\n    <ul>\r\n      {onShowFindRes.map(({ name, number, id }) => (\r\n        <li key={id}>\r\n          {name}:{number}\r\n          <button id={id} onClick={onDelete}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nContactList.protoTypes = {\r\n  onShowFindRes: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport Filter from \"./Filter\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nexport class Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n      { id: \"id-5\", name: \"ennie kopeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: \"\"\r\n  };\r\n  handleFindOverlap = newName =>\r\n    this.state.contacts.some(contact =>\r\n      contact.name\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .some(name => name === newName.toLowerCase())\r\n    );\r\n  handleChangeFilter = value => {\r\n    this.setState({ filter: value });\r\n  };\r\n  handleFindContacts = () =>\r\n    this.state.contacts.filter(contact =>\r\n      contact.name\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .some(name => name.startsWith(this.state.filter.toLowerCase()))\r\n    );\r\n  handleDeleteContact = ev => {\r\n    ev.persist();\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== ev.target.id)\r\n    }));\r\n  };\r\n  handleCheckIn = newContact => {\r\n    this.setState(state => ({\r\n      contacts: [...state.contacts, newContact]\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          onCheckIn={this.handleCheckIn}\r\n          onFindOverlap={this.handleFindOverlap}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter onFindContact={this.handleChangeFilter} />\r\n        <ContactList\r\n          onShowFindRes={this.handleFindContacts()}\r\n          onDelete={this.handleDeleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookForm\":\"contactform_phonebookForm__eZyjh\",\"labelStyle\":\"contactform_labelStyle__Ny5eV\"};"],"sourceRoot":""}